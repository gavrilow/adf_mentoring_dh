{
	"name": "PopulateFactTables",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DB_MoviesT_tOnlinePurchase",
						"type": "DatasetReference"
					},
					"name": "tOnlinePurchase"
				},
				{
					"dataset": {
						"referenceName": "DB_MoviesT_tOnlineService",
						"type": "DatasetReference"
					},
					"name": "tOnlineService"
				},
				{
					"dataset": {
						"referenceName": "DB_DataMartT_DimOnlineService",
						"type": "DatasetReference"
					},
					"name": "DimOnlineService"
				},
				{
					"dataset": {
						"referenceName": "DB_DataMartT_DimMovie",
						"type": "DatasetReference"
					},
					"name": "DimMovie"
				},
				{
					"dataset": {
						"referenceName": "DB_MoviesT_tMovies",
						"type": "DatasetReference"
					},
					"name": "tMovies"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DB_DataMartT_FactOnlinePurchase",
						"type": "DatasetReference"
					},
					"name": "FactOnlinePurchase"
				},
				{
					"dataset": {
						"referenceName": "DB_DataMartT_FactOnlinePurchase_MonthlySnapshot",
						"type": "DatasetReference"
					},
					"name": "FactOnlinePurchaseMonthlySnapshot"
				}
			],
			"transformations": [
				{
					"name": "OnlineServiceKey"
				},
				{
					"name": "JoinService"
				},
				{
					"name": "MovieId"
				},
				{
					"name": "JoinMovies"
				},
				{
					"name": "DateKey"
				},
				{
					"name": "MonthKey"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Id as integer,",
				"          ServiceId as integer,",
				"          MovieId as integer,",
				"          UserId as integer,",
				"          Price as decimal(4,1),",
				"          TransactionId as string,",
				"          TransactionDate as timestamp,",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          SrcFileName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> tOnlinePurchase",
				"source(output(",
				"          ServiceId as integer,",
				"          ServiceCode as string,",
				"          ServiceName as string,",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select ServiceId, ServiceCode from dbo.tOnlineService',",
				"     format: 'query') ~> tOnlineService",
				"source(output(",
				"          ServiceKey as integer,",
				"          ServiceCode as string,",
				"          ServiceName as string,",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select ServiceKey, ServiceCode from dbo.DimOnlineService',",
				"     format: 'query') ~> DimOnlineService",
				"source(output(",
				"          MovieKey as integer,",
				"          MovieIdNK as integer,",
				"          Title as string,",
				"          ReleaseDate as date,",
				"          Runtime as integer,",
				"          MovieStatus as string,",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DimMovie",
				"source(output(",
				"          MovieId as integer,",
				"          MovieIdNK as integer,",
				"          Budget as integer,",
				"          HomepagePath as string,",
				"          Title as string,",
				"          OriginalTitle as string,",
				"          ReleaseDate as date,",
				"          Revenue as long,",
				"          Runtime as integer,",
				"          MovieStatusId as integer,",
				"          AvgVote as decimal(3,1),",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          SrcFileName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT MovieId, MovieIdNK\\nFROM [dbo].[tMovies]\\nGroup by MovieId, MovieIdNK',",
				"     format: 'query') ~> tMovies",
				"tOnlineService, DimOnlineService join(tOnlineService@ServiceCode == DimOnlineService@ServiceCode,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> OnlineServiceKey",
				"tOnlinePurchase, OnlineServiceKey join(tOnlinePurchase@ServiceId == tOnlineService@ServiceId,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinService",
				"tMovies, DimMovie join(tMovies@MovieIdNK == DimMovie@MovieIdNK,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> MovieId",
				"JoinService, MovieId join(tOnlinePurchase@MovieId == tMovies@MovieId,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinMovies",
				"JoinMovies derive(DateKey = toInteger(replace(toString(toDate(TransactionDate)),'-',''))) ~> DateKey",
				"JoinMovies derive(MonthKey = toInteger(replace(substringIndex(toString(TransactionDate), '-', 2), '-', ''))) ~> MonthKey",
				"MonthKey aggregate(groupBy(MonthKey,",
				"          ServiceKey),",
				"     PurchaseAmount = sum(Price),",
				"          PurchaseQuantity = count(TransactionId)) ~> aggregate1",
				"DateKey sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DateKey as integer,",
				"          OnlineServiceKey as integer,",
				"          MovieKey as integer,",
				"          Price as decimal(4,1),",
				"          TransactionId as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          DateKey,",
				"          OnlineServiceKey = ServiceKey,",
				"          MovieKey,",
				"          Price,",
				"          TransactionId",
				"     )) ~> FactOnlinePurchase",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          MonthKey as integer,",
				"          OnlineServiceKey as integer,",
				"          PurchaseAmount as decimal(10,1),",
				"          PurchaseQuantity as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     saveOrder: 2,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          MonthKey,",
				"          OnlineServiceKey = ServiceKey,",
				"          PurchaseAmount,",
				"          PurchaseQuantity",
				"     )) ~> FactOnlinePurchaseMonthlySnapshot"
			]
		}
	}
}